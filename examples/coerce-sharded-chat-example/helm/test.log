[2m2022-08-27T16:06:53.036402Z[0m [32m INFO[0m [1mcoerce::remote::stream::mediator[0m[2m:[0m actor_id=RemoteRegistry-chat-server-1 subscribing to topic coerce (key="")
[2m2022-08-27T16:06:53.036772Z[0m [32m INFO[0m [1mcoerce::remote::stream::mediator[0m[2m:[0m actor_id=PubSubMediator-chat-server-1 subscribing to topic coerce (key="")
[2m2022-08-27T16:06:53.045316Z[0m [32m INFO[0m [1mcoerce_k8s[0m[2m:[0m pods=Ok(
    ObjectList {
        metadata: ListMeta {
            continue_: None,
            remaining_item_count: None,
            resource_version: Some(
                "832530",
            ),
            self_link: None,
        },
        items: [
            Pod {
                metadata: ObjectMeta {
                    annotations: None,
                    cluster_name: None,
                    creation_timestamp: Some(
                        Time(
                            2022-08-27T16:00:05Z,
                        ),
                    ),
                    deletion_grace_period_seconds: None,
                    deletion_timestamp: None,
                    finalizers: None,
                    generate_name: Some(
                        "coerce-sharded-chat-",
                    ),
                    generation: None,
                    labels: Some(
                        {
                            "app": "coerce",
                            "app.kubernetes.io/instance": "sharded-chat",
                            "app.kubernetes.io/name": "coerce-sharded-chat",
                            "controller-revision-hash": "coerce-sharded-chat-656f585b55",
                            "statefulset.kubernetes.io/pod-name": "coerce-sharded-chat-0",
                        },
                    ),
                    managed_fields: Some(
                        [
                            ManagedFieldsEntry {
                                api_version: Some(
                                    "v1",
                                ),
                                fields_type: Some(
                                    "FieldsV1",
                                ),
                                fields_v1: Some(
                                    FieldsV1(
                                        Object({
                                            "f:metadata": Object({
                                                "f:generateName": Object({}),
                                                "f:labels": Object({
                                                    ".": Object({}),
                                                    "f:app": Object({}),
                                                    "f:app.kubernetes.io/instance": Object({}),
                                                    "f:app.kubernetes.io/name": Object({}),
                                                    "f:controller-revision-hash": Object({}),
                                                    "f:statefulset.kubernetes.io/pod-name": Object({}),
                                                }),
                                                "f:ownerReferences": Object({
                                                    ".": Object({}),
                                                    "k:{\"uid\":\"36d11411-2f17-411a-b480-3164642ce59f\"}": Object({}),
                                                }),
                                            }),
                                            "f:spec": Object({
                                                "f:containers": Object({
                                                    "k:{\"name\":\"coerce-sharded-chat\"}": Object({
                                                        ".": Object({}),
                                                        "f:env": Object({
                                                            ".": Object({}),
                                                            "k:{\"name\":\"CLUSTER_IP\"}": Object({
                                                                ".": Object({}),
                                                                "f:name": Object({}),
                                                                "f:value": Object({}),
                                                            }),
                                                            "k:{\"name\":\"POD_NAME\"}": Object({
                                                                ".": Object({}),
                                                                "f:name": Object({}),
                                                                "f:valueFrom": Object({
                                                                    ".": Object({}),
                                                                    "f:fieldRef": Object({}),
                                                                }),
                                                            }),
                                                        }),
                                                        "f:image": Object({}),
                                                        "f:imagePullPolicy": Object({}),
                                                        "f:name": Object({}),
                                                        "f:ports": Object({
                                                            ".": Object({}),
                                                            "k:{\"containerPort\":31101,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31102,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31103,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31104,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                        }),
                                                        "f:resources": Object({}),
                                                        "f:securityContext": Object({}),
                                                        "f:terminationMessagePath": Object({}),
                                                        "f:terminationMessagePolicy": Object({}),
                                                    }),
                                                }),
                                                "f:dnsPolicy": Object({}),
                                                "f:enableServiceLinks": Object({}),
                                                "f:hostname": Object({}),
                                                "f:restartPolicy": Object({}),
                                                "f:schedulerName": Object({}),
                                                "f:securityContext": Object({}),
                                                "f:serviceAccount": Object({}),
                                                "f:serviceAccountName": Object({}),
                                                "f:subdomain": Object({}),
                                                "f:terminationGracePeriodSeconds": Object({}),
                                            }),
                                        }),
                                    ),
                                ),
                                manager: Some(
                                    "kube-controller-manager",
                                ),
                                operation: Some(
                                    "Update",
                                ),
                                subresource: None,
                                time: Some(
                                    Time(
                                        2022-08-27T16:00:05Z,
                                    ),
                                ),
                            },
                            ManagedFieldsEntry {
                                api_version: Some(
                                    "v1",
                                ),
                                fields_type: Some(
                                    "FieldsV1",
                                ),
                                fields_v1: Some(
                                    FieldsV1(
                                        Object({
                                            "f:status": Object({
                                                "f:conditions": Object({
                                                    "k:{\"type\":\"ContainersReady\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                    "k:{\"type\":\"Initialized\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                    "k:{\"type\":\"Ready\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                }),
                                                "f:containerStatuses": Object({}),
                                                "f:hostIP": Object({}),
                                                "f:phase": Object({}),
                                                "f:podIP": Object({}),
                                                "f:podIPs": Object({
                                                    ".": Object({}),
                                                    "k:{\"ip\":\"10.1.1.217\"}": Object({
                                                        ".": Object({}),
                                                        "f:ip": Object({}),
                                                    }),
                                                }),
                                                "f:startTime": Object({}),
                                            }),
                                        }),
                                    ),
                                ),
                                manager: Some(
                                    "kubelet",
                                ),
                                operation: Some(
                                    "Update",
                                ),
                                subresource: Some(
                                    "status",
                                ),
                                time: Some(
                                    Time(
                                        2022-08-27T16:00:07Z,
                                    ),
                                ),
                            },
                        ],
                    ),
                    name: Some(
                        "coerce-sharded-chat-0",
                    ),
                    namespace: Some(
                        "test",
                    ),
                    owner_references: Some(
                        [
                            OwnerReference {
                                api_version: "apps/v1",
                                block_owner_deletion: Some(
                                    true,
                                ),
                                controller: Some(
                                    true,
                                ),
                                kind: "StatefulSet",
                                name: "coerce-sharded-chat",
                                uid: "36d11411-2f17-411a-b480-3164642ce59f",
                            },
                        ],
                    ),
                    resource_version: Some(
                        "831994",
                    ),
                    self_link: None,
                    uid: Some(
                        "3df935a6-8977-43b9-ab3b-9b10a8544c5f",
                    ),
                },
                spec: Some(
                    PodSpec {
                        active_deadline_seconds: None,
                        affinity: None,
                        automount_service_account_token: None,
                        containers: [
                            Container {
                                args: None,
                                command: None,
                                env: Some(
                                    [
                                        EnvVar {
                                            name: "POD_NAME",
                                            value: None,
                                            value_from: Some(
                                                EnvVarSource {
                                                    config_map_key_ref: None,
                                                    field_ref: Some(
                                                        ObjectFieldSelector {
                                                            api_version: Some(
                                                                "v1",
                                                            ),
                                                            field_path: "metadata.name",
                                                        },
                                                    ),
                                                    resource_field_ref: None,
                                                    secret_key_ref: None,
                                                },
                                            ),
                                        },
                                        EnvVar {
                                            name: "CLUSTER_IP",
                                            value: Some(
                                                "$(POD_NAME).coerce-sharded-chat",
                                            ),
                                            value_from: None,
                                        },
                                    ],
                                ),
                                env_from: None,
                                image: Some(
                                    "coerce-sharded-chat:latest",
                                ),
                                image_pull_policy: Some(
                                    "IfNotPresent",
                                ),
                                lifecycle: None,
                                liveness_probe: None,
                                name: "coerce-sharded-chat",
                                ports: Some(
                                    [
                                        ContainerPort {
                                            container_port: 31101,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "coerce",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31102,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "websocket",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31103,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "coerce-api",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31104,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "metrics",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                    ],
                                ),
                                readiness_probe: None,
                                resources: Some(
                                    ResourceRequirements {
                                        limits: None,
                                        requests: None,
                                    },
                                ),
                                security_context: Some(
                                    SecurityContext {
                                        allow_privilege_escalation: None,
                                        capabilities: None,
                                        privileged: None,
                                        proc_mount: None,
                                        read_only_root_filesystem: None,
                                        run_as_group: None,
                                        run_as_non_root: None,
                                        run_as_user: None,
                                        se_linux_options: None,
                                        seccomp_profile: None,
                                        windows_options: None,
                                    },
                                ),
                                startup_probe: None,
                                stdin: None,
                                stdin_once: None,
                                termination_message_path: Some(
                                    "/dev/termination-log",
                                ),
                                termination_message_policy: Some(
                                    "File",
                                ),
                                tty: None,
                                volume_devices: None,
                                volume_mounts: Some(
                                    [
                                        VolumeMount {
                                            mount_path: "/var/run/secrets/kubernetes.io/serviceaccount",
                                            mount_propagation: None,
                                            name: "kube-api-access-sh4w8",
                                            read_only: Some(
                                                true,
                                            ),
                                            sub_path: None,
                                            sub_path_expr: None,
                                        },
                                    ],
                                ),
                                working_dir: None,
                            },
                        ],
                        dns_config: None,
                        dns_policy: Some(
                            "ClusterFirst",
                        ),
                        enable_service_links: Some(
                            true,
                        ),
                        ephemeral_containers: None,
                        host_aliases: None,
                        host_ipc: None,
                        host_network: None,
                        host_pid: None,
                        hostname: Some(
                            "coerce-sharded-chat-0",
                        ),
                        image_pull_secrets: None,
                        init_containers: None,
                        node_name: Some(
                            "docker-desktop",
                        ),
                        node_selector: None,
                        os: None,
                        overhead: None,
                        preemption_policy: Some(
                            "PreemptLowerPriority",
                        ),
                        priority: Some(
                            0,
                        ),
                        priority_class_name: None,
                        readiness_gates: None,
                        restart_policy: Some(
                            "Always",
                        ),
                        runtime_class_name: None,
                        scheduler_name: Some(
                            "default-scheduler",
                        ),
                        security_context: Some(
                            PodSecurityContext {
                                fs_group: None,
                                fs_group_change_policy: None,
                                run_as_group: None,
                                run_as_non_root: None,
                                run_as_user: None,
                                se_linux_options: None,
                                seccomp_profile: None,
                                supplemental_groups: None,
                                sysctls: None,
                                windows_options: None,
                            },
                        ),
                        service_account: Some(
                            "coerce-sharded-chat",
                        ),
                        service_account_name: Some(
                            "coerce-sharded-chat",
                        ),
                        set_hostname_as_fqdn: None,
                        share_process_namespace: None,
                        subdomain: Some(
                            "coerce-sharded-chat",
                        ),
                        termination_grace_period_seconds: Some(
                            30,
                        ),
                        tolerations: Some(
                            [
                                Toleration {
                                    effect: Some(
                                        "NoExecute",
                                    ),
                                    key: Some(
                                        "node.kubernetes.io/not-ready",
                                    ),
                                    operator: Some(
                                        "Exists",
                                    ),
                                    toleration_seconds: Some(
                                        300,
                                    ),
                                    value: None,
                                },
                                Toleration {
                                    effect: Some(
                                        "NoExecute",
                                    ),
                                    key: Some(
                                        "node.kubernetes.io/unreachable",
                                    ),
                                    operator: Some(
                                        "Exists",
                                    ),
                                    toleration_seconds: Some(
                                        300,
                                    ),
                                    value: None,
                                },
                            ],
                        ),
                        topology_spread_constraints: None,
                        volumes: Some(
                            [
                                Volume {
                                    aws_elastic_block_store: None,
                                    azure_disk: None,
                                    azure_file: None,
                                    cephfs: None,
                                    cinder: None,
                                    config_map: None,
                                    csi: None,
                                    downward_api: None,
                                    empty_dir: None,
                                    ephemeral: None,
                                    fc: None,
                                    flex_volume: None,
                                    flocker: None,
                                    gce_persistent_disk: None,
                                    git_repo: None,
                                    glusterfs: None,
                                    host_path: None,
                                    iscsi: None,
                                    name: "kube-api-access-sh4w8",
                                    nfs: None,
                                    persistent_volume_claim: None,
                                    photon_persistent_disk: None,
                                    portworx_volume: None,
                                    projected: Some(
                                        ProjectedVolumeSource {
                                            default_mode: Some(
                                                420,
                                            ),
                                            sources: Some(
                                                [
                                                    VolumeProjection {
                                                        config_map: None,
                                                        downward_api: None,
                                                        secret: None,
                                                        service_account_token: Some(
                                                            ServiceAccountTokenProjection {
                                                                audience: None,
                                                                expiration_seconds: Some(
                                                                    3607,
                                                                ),
                                                                path: "token",
                                                            },
                                                        ),
                                                    },
                                                    VolumeProjection {
                                                        config_map: Some(
                                                            ConfigMapProjection {
                                                                items: Some(
                                                                    [
                                                                        KeyToPath {
                                                                            key: "ca.crt",
                                                                            mode: None,
                                                                            path: "ca.crt",
                                                                        },
                                                                    ],
                                                                ),
                                                                name: Some(
                                                                    "kube-root-ca.crt",
                                                                ),
                                                                optional: None,
                                                            },
                                                        ),
                                                        downward_api: None,
                                                        secret: None,
                                                        service_account_token: None,
                                                    },
                                                    VolumeProjection {
                                                        config_map: None,
                                                        downward_api: Some(
                                                            DownwardAPIProjection {
                                                                items: Some(
                                                                    [
                                                                        DownwardAPIVolumeFile {
                                                                            field_ref: Some(
                                                                                ObjectFieldSelector {
                                                                                    api_version: Some(
                                                                                        "v1",
                                                                                    ),
                                                                                    field_path: "metadata.namespace",
                                                                                },
                                                                            ),
                                                                            mode: None,
                                                                            path: "namespace",
                                                                            resource_field_ref: None,
                                                                        },
                                                                    ],
                                                                ),
                                                            },
                                                        ),
                                                        secret: None,
                                                        service_account_token: None,
                                                    },
                                                ],
                                            ),
                                        },
                                    ),
                                    quobyte: None,
                                    rbd: None,
                                    scale_io: None,
                                    secret: None,
                                    storageos: None,
                                    vsphere_volume: None,
                                },
                            ],
                        ),
                    },
                ),
                status: Some(
                    PodStatus {
                        conditions: Some(
                            [
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:00:05Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "Initialized",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:00:07Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "Ready",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:00:07Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "ContainersReady",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:00:05Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "PodScheduled",
                                },
                            ],
                        ),
                        container_statuses: Some(
                            [
                                ContainerStatus {
                                    container_id: Some(
                                        "docker://0fab609b67c411cbd99d171fdcae307dcbdf0de8ea96861f24c4a32aaae8cbf5",
                                    ),
                                    image: "coerce-sharded-chat:latest",
                                    image_id: "docker://sha256:bddb9d44e2826e39961a0f840ff7cea4260d5a281d58b48eb1a0a73cc50402d5",
                                    last_state: Some(
                                        ContainerState {
                                            running: None,
                                            terminated: None,
                                            waiting: None,
                                        },
                                    ),
                                    name: "coerce-sharded-chat",
                                    ready: true,
                                    restart_count: 0,
                                    started: Some(
                                        true,
                                    ),
                                    state: Some(
                                        ContainerState {
                                            running: Some(
                                                ContainerStateRunning {
                                                    started_at: Some(
                                                        Time(
                                                            2022-08-27T16:00:06Z,
                                                        ),
                                                    ),
                                                },
                                            ),
                                            terminated: None,
                                            waiting: None,
                                        },
                                    ),
                                },
                            ],
                        ),
                        ephemeral_container_statuses: None,
                        host_ip: Some(
                            "192.168.65.4",
                        ),
                        init_container_statuses: None,
                        message: None,
                        nominated_node_name: None,
                        phase: Some(
                            "Running",
                        ),
                        pod_ip: Some(
                            "10.1.1.217",
                        ),
                        pod_ips: Some(
                            [
                                PodIP {
                                    ip: Some(
                                        "10.1.1.217",
                                    ),
                                },
                            ],
                        ),
                        qos_class: Some(
                            "BestEffort",
                        ),
                        reason: None,
                        start_time: Some(
                            Time(
                                2022-08-27T16:00:05Z,
                            ),
                        ),
                    },
                ),
            },
            Pod {
                metadata: ObjectMeta {
                    annotations: None,
                    cluster_name: None,
                    creation_timestamp: Some(
                        Time(
                            2022-08-27T16:06:50Z,
                        ),
                    ),
                    deletion_grace_period_seconds: None,
                    deletion_timestamp: None,
                    finalizers: None,
                    generate_name: Some(
                        "coerce-sharded-chat-",
                    ),
                    generation: None,
                    labels: Some(
                        {
                            "app": "coerce",
                            "app.kubernetes.io/instance": "sharded-chat",
                            "app.kubernetes.io/name": "coerce-sharded-chat",
                            "controller-revision-hash": "coerce-sharded-chat-656f585b55",
                            "statefulset.kubernetes.io/pod-name": "coerce-sharded-chat-1",
                        },
                    ),
                    managed_fields: Some(
                        [
                            ManagedFieldsEntry {
                                api_version: Some(
                                    "v1",
                                ),
                                fields_type: Some(
                                    "FieldsV1",
                                ),
                                fields_v1: Some(
                                    FieldsV1(
                                        Object({
                                            "f:metadata": Object({
                                                "f:generateName": Object({}),
                                                "f:labels": Object({
                                                    ".": Object({}),
                                                    "f:app": Object({}),
                                                    "f:app.kubernetes.io/instance": Object({}),
                                                    "f:app.kubernetes.io/name": Object({}),
                                                    "f:controller-revision-hash": Object({}),
                                                    "f:statefulset.kubernetes.io/pod-name": Object({}),
                                                }),
                                                "f:ownerReferences": Object({
                                                    ".": Object({}),
                                                    "k:{\"uid\":\"36d11411-2f17-411a-b480-3164642ce59f\"}": Object({}),
                                                }),
                                            }),
                                            "f:spec": Object({
                                                "f:containers": Object({
                                                    "k:{\"name\":\"coerce-sharded-chat\"}": Object({
                                                        ".": Object({}),
                                                        "f:env": Object({
                                                            ".": Object({}),
                                                            "k:{\"name\":\"CLUSTER_IP\"}": Object({
                                                                ".": Object({}),
                                                                "f:name": Object({}),
                                                                "f:value": Object({}),
                                                            }),
                                                            "k:{\"name\":\"POD_NAME\"}": Object({
                                                                ".": Object({}),
                                                                "f:name": Object({}),
                                                                "f:valueFrom": Object({
                                                                    ".": Object({}),
                                                                    "f:fieldRef": Object({}),
                                                                }),
                                                            }),
                                                        }),
                                                        "f:image": Object({}),
                                                        "f:imagePullPolicy": Object({}),
                                                        "f:name": Object({}),
                                                        "f:ports": Object({
                                                            ".": Object({}),
                                                            "k:{\"containerPort\":31101,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31102,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31103,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31104,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                        }),
                                                        "f:resources": Object({}),
                                                        "f:securityContext": Object({}),
                                                        "f:terminationMessagePath": Object({}),
                                                        "f:terminationMessagePolicy": Object({}),
                                                    }),
                                                }),
                                                "f:dnsPolicy": Object({}),
                                                "f:enableServiceLinks": Object({}),
                                                "f:hostname": Object({}),
                                                "f:restartPolicy": Object({}),
                                                "f:schedulerName": Object({}),
                                                "f:securityContext": Object({}),
                                                "f:serviceAccount": Object({}),
                                                "f:serviceAccountName": Object({}),
                                                "f:subdomain": Object({}),
                                                "f:terminationGracePeriodSeconds": Object({}),
                                            }),
                                        }),
                                    ),
                                ),
                                manager: Some(
                                    "kube-controller-manager",
                                ),
                                operation: Some(
                                    "Update",
                                ),
                                subresource: None,
                                time: Some(
                                    Time(
                                        2022-08-27T16:06:50Z,
                                    ),
                                ),
                            },
                            ManagedFieldsEntry {
                                api_version: Some(
                                    "v1",
                                ),
                                fields_type: Some(
                                    "FieldsV1",
                                ),
                                fields_v1: Some(
                                    FieldsV1(
                                        Object({
                                            "f:status": Object({
                                                "f:conditions": Object({
                                                    "k:{\"type\":\"ContainersReady\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                    "k:{\"type\":\"Initialized\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                    "k:{\"type\":\"Ready\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                }),
                                                "f:containerStatuses": Object({}),
                                                "f:hostIP": Object({}),
                                                "f:phase": Object({}),
                                                "f:podIP": Object({}),
                                                "f:podIPs": Object({
                                                    ".": Object({}),
                                                    "k:{\"ip\":\"10.1.1.218\"}": Object({
                                                        ".": Object({}),
                                                        "f:ip": Object({}),
                                                    }),
                                                }),
                                                "f:startTime": Object({}),
                                            }),
                                        }),
                                    ),
                                ),
                                manager: Some(
                                    "kubelet",
                                ),
                                operation: Some(
                                    "Update",
                                ),
                                subresource: Some(
                                    "status",
                                ),
                                time: Some(
                                    Time(
                                        2022-08-27T16:06:52Z,
                                    ),
                                ),
                            },
                        ],
                    ),
                    name: Some(
                        "coerce-sharded-chat-1",
                    ),
                    namespace: Some(
                        "test",
                    ),
                    owner_references: Some(
                        [
                            OwnerReference {
                                api_version: "apps/v1",
                                block_owner_deletion: Some(
                                    true,
                                ),
                                controller: Some(
                                    true,
                                ),
                                kind: "StatefulSet",
                                name: "coerce-sharded-chat",
                                uid: "36d11411-2f17-411a-b480-3164642ce59f",
                            },
                        ],
                    ),
                    resource_version: Some(
                        "832518",
                    ),
                    self_link: None,
                    uid: Some(
                        "026b67bd-d8bb-457f-9b5c-a4ad2635e229",
                    ),
                },
                spec: Some(
                    PodSpec {
                        active_deadline_seconds: None,
                        affinity: None,
                        automount_service_account_token: None,
                        containers: [
                            Container {
                                args: None,
                                command: None,
                                env: Some(
                                    [
                                        EnvVar {
                                            name: "POD_NAME",
                                            value: None,
                                            value_from: Some(
                                                EnvVarSource {
                                                    config_map_key_ref: None,
                                                    field_ref: Some(
                                                        ObjectFieldSelector {
                                                            api_version: Some(
                                                                "v1",
                                                            ),
                                                            field_path: "metadata.name",
                                                        },
                                                    ),
                                                    resource_field_ref: None,
                                                    secret_key_ref: None,
                                                },
                                            ),
                                        },
                                        EnvVar {
                                            name: "CLUSTER_IP",
                                            value: Some(
                                                "$(POD_NAME).coerce-sharded-chat",
                                            ),
                                            value_from: None,
                                        },
                                    ],
                                ),
                                env_from: None,
                                image: Some(
                                    "coerce-sharded-chat:latest",
                                ),
                                image_pull_policy: Some(
                                    "IfNotPresent",
                                ),
                                lifecycle: None,
                                liveness_probe: None,
                                name: "coerce-sharded-chat",
                                ports: Some(
                                    [
                                        ContainerPort {
                                            container_port: 31101,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "coerce",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31102,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "websocket",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31103,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "coerce-api",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31104,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "metrics",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                    ],
                                ),
                                readiness_probe: None,
                                resources: Some(
                                    ResourceRequirements {
                                        limits: None,
                                        requests: None,
                                    },
                                ),
                                security_context: Some(
                                    SecurityContext {
                                        allow_privilege_escalation: None,
                                        capabilities: None,
                                        privileged: None,
                                        proc_mount: None,
                                        read_only_root_filesystem: None,
                                        run_as_group: None,
                                        run_as_non_root: None,
                                        run_as_user: None,
                                        se_linux_options: None,
                                        seccomp_profile: None,
                                        windows_options: None,
                                    },
                                ),
                                startup_probe: None,
                                stdin: None,
                                stdin_once: None,
                                termination_message_path: Some(
                                    "/dev/termination-log",
                                ),
                                termination_message_policy: Some(
                                    "File",
                                ),
                                tty: None,
                                volume_devices: None,
                                volume_mounts: Some(
                                    [
                                        VolumeMount {
                                            mount_path: "/var/run/secrets/kubernetes.io/serviceaccount",
                                            mount_propagation: None,
                                            name: "kube-api-access-9v7pb",
                                            read_only: Some(
                                                true,
                                            ),
                                            sub_path: None,
                                            sub_path_expr: None,
                                        },
                                    ],
                                ),
                                working_dir: None,
                            },
                        ],
                        dns_config: None,
                        dns_policy: Some(
                            "ClusterFirst",
                        ),
                        enable_service_links: Some(
                            true,
                        ),
                        ephemeral_containers: None,
                        host_aliases: None,
                        host_ipc: None,
                        host_network: None,
                        host_pid: None,
                        hostname: Some(
                            "coerce-sharded-chat-1",
                        ),
                        image_pull_secrets: None,
                        init_containers: None,
                        node_name: Some(
                            "docker-desktop",
                        ),
                        node_selector: None,
                        os: None,
                        overhead: None,
                        preemption_policy: Some(
                            "PreemptLowerPriority",
                        ),
                        priority: Some(
                            0,
                        ),
                        priority_class_name: None,
                        readiness_gates: None,
                        restart_policy: Some(
                            "Always",
                        ),
                        runtime_class_name: None,
                        scheduler_name: Some(
                            "default-scheduler",
                        ),
                        security_context: Some(
                            PodSecurityContext {
                                fs_group: None,
                                fs_group_change_policy: None,
                                run_as_group: None,
                                run_as_non_root: None,
                                run_as_user: None,
                                se_linux_options: None,
                                seccomp_profile: None,
                                supplemental_groups: None,
                                sysctls: None,
                                windows_options: None,
                            },
                        ),
                        service_account: Some(
                            "coerce-sharded-chat",
                        ),
                        service_account_name: Some(
                            "coerce-sharded-chat",
                        ),
                        set_hostname_as_fqdn: None,
                        share_process_namespace: None,
                        subdomain: Some(
                            "coerce-sharded-chat",
                        ),
                        termination_grace_period_seconds: Some(
                            30,
                        ),
                        tolerations: Some(
                            [
                                Toleration {
                                    effect: Some(
                                        "NoExecute",
                                    ),
                                    key: Some(
                                        "node.kubernetes.io/not-ready",
                                    ),
                                    operator: Some(
                                        "Exists",
                                    ),
                                    toleration_seconds: Some(
                                        300,
                                    ),
                                    value: None,
                                },
                                Toleration {
                                    effect: Some(
                                        "NoExecute",
                                    ),
                                    key: Some(
                                        "node.kubernetes.io/unreachable",
                                    ),
                                    operator: Some(
                                        "Exists",
                                    ),
                                    toleration_seconds: Some(
                                        300,
                                    ),
                                    value: None,
                                },
                            ],
                        ),
                        topology_spread_constraints: None,
                        volumes: Some(
                            [
                                Volume {
                                    aws_elastic_block_store: None,
                                    azure_disk: None,
                                    azure_file: None,
                                    cephfs: None,
                                    cinder: None,
                                    config_map: None,
                                    csi: None,
                                    downward_api: None,
                                    empty_dir: None,
                                    ephemeral: None,
                                    fc: None,
                                    flex_volume: None,
                                    flocker: None,
                                    gce_persistent_disk: None,
                                    git_repo: None,
                                    glusterfs: None,
                                    host_path: None,
                                    iscsi: None,
                                    name: "kube-api-access-9v7pb",
                                    nfs: None,
                                    persistent_volume_claim: None,
                                    photon_persistent_disk: None,
                                    portworx_volume: None,
                                    projected: Some(
                                        ProjectedVolumeSource {
                                            default_mode: Some(
                                                420,
                                            ),
                                            sources: Some(
                                                [
                                                    VolumeProjection {
                                                        config_map: None,
                                                        downward_api: None,
                                                        secret: None,
                                                        service_account_token: Some(
                                                            ServiceAccountTokenProjection {
                                                                audience: None,
                                                                expiration_seconds: Some(
                                                                    3607,
                                                                ),
                                                                path: "token",
                                                            },
                                                        ),
                                                    },
                                                    VolumeProjection {
                                                        config_map: Some(
                                                            ConfigMapProjection {
                                                                items: Some(
                                                                    [
                                                                        KeyToPath {
                                                                            key: "ca.crt",
                                                                            mode: None,
                                                                            path: "ca.crt",
                                                                        },
                                                                    ],
                                                                ),
                                                                name: Some(
                                                                    "kube-root-ca.crt",
                                                                ),
                                                                optional: None,
                                                            },
                                                        ),
                                                        downward_api: None,
                                                        secret: None,
                                                        service_account_token: None,
                                                    },
                                                    VolumeProjection {
                                                        config_map: None,
                                                        downward_api: Some(
                                                            DownwardAPIProjection {
                                                                items: Some(
                                                                    [
                                                                        DownwardAPIVolumeFile {
                                                                            field_ref: Some(
                                                                                ObjectFieldSelector {
                                                                                    api_version: Some(
                                                                                        "v1",
                                                                                    ),
                                                                                    field_path: "metadata.namespace",
                                                                                },
                                                                            ),
                                                                            mode: None,
                                                                            path: "namespace",
                                                                            resource_field_ref: None,
                                                                        },
                                                                    ],
                                                                ),
                                                            },
                                                        ),
                                                        secret: None,
                                                        service_account_token: None,
                                                    },
                                                ],
                                            ),
                                        },
                                    ),
                                    quobyte: None,
                                    rbd: None,
                                    scale_io: None,
                                    secret: None,
                                    storageos: None,
                                    vsphere_volume: None,
                                },
                            ],
                        ),
                    },
                ),
                status: Some(
                    PodStatus {
                        conditions: Some(
                            [
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:06:50Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "Initialized",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:06:52Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "Ready",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:06:52Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "ContainersReady",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:06:50Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "PodScheduled",
                                },
                            ],
                        ),
                        container_statuses: Some(
                            [
                                ContainerStatus {
                                    container_id: Some(
                                        "docker://cf601902fb8ad3f39578064c1737e7f3b52e594217584aab6a61a189f41ddd9f",
                                    ),
                                    image: "coerce-sharded-chat:latest",
                                    image_id: "docker://sha256:bccd954874eca0abcffa0e705ee08e37431a43d162aa731da6204f5286df90d5",
                                    last_state: Some(
                                        ContainerState {
                                            running: None,
                                            terminated: None,
                                            waiting: None,
                                        },
                                    ),
                                    name: "coerce-sharded-chat",
                                    ready: true,
                                    restart_count: 0,
                                    started: Some(
                                        true,
                                    ),
                                    state: Some(
                                        ContainerState {
                                            running: Some(
                                                ContainerStateRunning {
                                                    started_at: Some(
                                                        Time(
                                                            2022-08-27T16:06:51Z,
                                                        ),
                                                    ),
                                                },
                                            ),
                                            terminated: None,
                                            waiting: None,
                                        },
                                    ),
                                },
                            ],
                        ),
                        ephemeral_container_statuses: None,
                        host_ip: Some(
                            "192.168.65.4",
                        ),
                        init_container_statuses: None,
                        message: None,
                        nominated_node_name: None,
                        phase: Some(
                            "Running",
                        ),
                        pod_ip: Some(
                            "10.1.1.218",
                        ),
                        pod_ips: Some(
                            [
                                PodIP {
                                    ip: Some(
                                        "10.1.1.218",
                                    ),
                                },
                            ],
                        ),
                        qos_class: Some(
                            "BestEffort",
                        ),
                        reason: None,
                        start_time: Some(
                            Time(
                                2022-08-27T16:06:50Z,
                            ),
                        ),
                    },
                ),
            },
            Pod {
                metadata: ObjectMeta {
                    annotations: None,
                    cluster_name: None,
                    creation_timestamp: Some(
                        Time(
                            2022-08-27T16:06:52Z,
                        ),
                    ),
                    deletion_grace_period_seconds: None,
                    deletion_timestamp: None,
                    finalizers: None,
                    generate_name: Some(
                        "coerce-sharded-chat-",
                    ),
                    generation: None,
                    labels: Some(
                        {
                            "app": "coerce",
                            "app.kubernetes.io/instance": "sharded-chat",
                            "app.kubernetes.io/name": "coerce-sharded-chat",
                            "controller-revision-hash": "coerce-sharded-chat-656f585b55",
                            "statefulset.kubernetes.io/pod-name": "coerce-sharded-chat-2",
                        },
                    ),
                    managed_fields: Some(
                        [
                            ManagedFieldsEntry {
                                api_version: Some(
                                    "v1",
                                ),
                                fields_type: Some(
                                    "FieldsV1",
                                ),
                                fields_v1: Some(
                                    FieldsV1(
                                        Object({
                                            "f:metadata": Object({
                                                "f:generateName": Object({}),
                                                "f:labels": Object({
                                                    ".": Object({}),
                                                    "f:app": Object({}),
                                                    "f:app.kubernetes.io/instance": Object({}),
                                                    "f:app.kubernetes.io/name": Object({}),
                                                    "f:controller-revision-hash": Object({}),
                                                    "f:statefulset.kubernetes.io/pod-name": Object({}),
                                                }),
                                                "f:ownerReferences": Object({
                                                    ".": Object({}),
                                                    "k:{\"uid\":\"36d11411-2f17-411a-b480-3164642ce59f\"}": Object({}),
                                                }),
                                            }),
                                            "f:spec": Object({
                                                "f:containers": Object({
                                                    "k:{\"name\":\"coerce-sharded-chat\"}": Object({
                                                        ".": Object({}),
                                                        "f:env": Object({
                                                            ".": Object({}),
                                                            "k:{\"name\":\"CLUSTER_IP\"}": Object({
                                                                ".": Object({}),
                                                                "f:name": Object({}),
                                                                "f:value": Object({}),
                                                            }),
                                                            "k:{\"name\":\"POD_NAME\"}": Object({
                                                                ".": Object({}),
                                                                "f:name": Object({}),
                                                                "f:valueFrom": Object({
                                                                    ".": Object({}),
                                                                    "f:fieldRef": Object({}),
                                                                }),
                                                            }),
                                                        }),
                                                        "f:image": Object({}),
                                                        "f:imagePullPolicy": Object({}),
                                                        "f:name": Object({}),
                                                        "f:ports": Object({
                                                            ".": Object({}),
                                                            "k:{\"containerPort\":31101,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31102,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31103,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                            "k:{\"containerPort\":31104,\"protocol\":\"TCP\"}": Object({
                                                                ".": Object({}),
                                                                "f:containerPort": Object({}),
                                                                "f:name": Object({}),
                                                                "f:protocol": Object({}),
                                                            }),
                                                        }),
                                                        "f:resources": Object({}),
                                                        "f:securityContext": Object({}),
                                                        "f:terminationMessagePath": Object({}),
                                                        "f:terminationMessagePolicy": Object({}),
                                                    }),
                                                }),
                                                "f:dnsPolicy": Object({}),
                                                "f:enableServiceLinks": Object({}),
                                                "f:hostname": Object({}),
                                                "f:restartPolicy": Object({}),
                                                "f:schedulerName": Object({}),
                                                "f:securityContext": Object({}),
                                                "f:serviceAccount": Object({}),
                                                "f:serviceAccountName": Object({}),
                                                "f:subdomain": Object({}),
                                                "f:terminationGracePeriodSeconds": Object({}),
                                            }),
                                        }),
                                    ),
                                ),
                                manager: Some(
                                    "kube-controller-manager",
                                ),
                                operation: Some(
                                    "Update",
                                ),
                                subresource: None,
                                time: Some(
                                    Time(
                                        2022-08-27T16:06:52Z,
                                    ),
                                ),
                            },
                            ManagedFieldsEntry {
                                api_version: Some(
                                    "v1",
                                ),
                                fields_type: Some(
                                    "FieldsV1",
                                ),
                                fields_v1: Some(
                                    FieldsV1(
                                        Object({
                                            "f:status": Object({
                                                "f:conditions": Object({
                                                    "k:{\"type\":\"ContainersReady\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:message": Object({}),
                                                        "f:reason": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                    "k:{\"type\":\"Initialized\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                    "k:{\"type\":\"Ready\"}": Object({
                                                        ".": Object({}),
                                                        "f:lastProbeTime": Object({}),
                                                        "f:lastTransitionTime": Object({}),
                                                        "f:message": Object({}),
                                                        "f:reason": Object({}),
                                                        "f:status": Object({}),
                                                        "f:type": Object({}),
                                                    }),
                                                }),
                                                "f:containerStatuses": Object({}),
                                                "f:hostIP": Object({}),
                                                "f:startTime": Object({}),
                                            }),
                                        }),
                                    ),
                                ),
                                manager: Some(
                                    "kubelet",
                                ),
                                operation: Some(
                                    "Update",
                                ),
                                subresource: Some(
                                    "status",
                                ),
                                time: Some(
                                    Time(
                                        2022-08-27T16:06:52Z,
                                    ),
                                ),
                            },
                        ],
                    ),
                    name: Some(
                        "coerce-sharded-chat-2",
                    ),
                    namespace: Some(
                        "test",
                    ),
                    owner_references: Some(
                        [
                            OwnerReference {
                                api_version: "apps/v1",
                                block_owner_deletion: Some(
                                    true,
                                ),
                                controller: Some(
                                    true,
                                ),
                                kind: "StatefulSet",
                                name: "coerce-sharded-chat",
                                uid: "36d11411-2f17-411a-b480-3164642ce59f",
                            },
                        ],
                    ),
                    resource_version: Some(
                        "832527",
                    ),
                    self_link: None,
                    uid: Some(
                        "2946a971-eecc-4483-b054-7c3206b09093",
                    ),
                },
                spec: Some(
                    PodSpec {
                        active_deadline_seconds: None,
                        affinity: None,
                        automount_service_account_token: None,
                        containers: [
                            Container {
                                args: None,
                                command: None,
                                env: Some(
                                    [
                                        EnvVar {
                                            name: "POD_NAME",
                                            value: None,
                                            value_from: Some(
                                                EnvVarSource {
                                                    config_map_key_ref: None,
                                                    field_ref: Some(
                                                        ObjectFieldSelector {
                                                            api_version: Some(
                                                                "v1",
                                                            ),
                                                            field_path: "metadata.name",
                                                        },
                                                    ),
                                                    resource_field_ref: None,
                                                    secret_key_ref: None,
                                                },
                                            ),
                                        },
                                        EnvVar {
                                            name: "CLUSTER_IP",
                                            value: Some(
                                                "$(POD_NAME).coerce-sharded-chat",
                                            ),
                                            value_from: None,
                                        },
                                    ],
                                ),
                                env_from: None,
                                image: Some(
                                    "coerce-sharded-chat:latest",
                                ),
                                image_pull_policy: Some(
                                    "IfNotPresent",
                                ),
                                lifecycle: None,
                                liveness_probe: None,
                                name: "coerce-sharded-chat",
                                ports: Some(
                                    [
                                        ContainerPort {
                                            container_port: 31101,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "coerce",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31102,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "websocket",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31103,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "coerce-api",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                        ContainerPort {
                                            container_port: 31104,
                                            host_ip: None,
                                            host_port: None,
                                            name: Some(
                                                "metrics",
                                            ),
                                            protocol: Some(
                                                "TCP",
                                            ),
                                        },
                                    ],
                                ),
                                readiness_probe: None,
                                resources: Some(
                                    ResourceRequirements {
                                        limits: None,
                                        requests: None,
                                    },
                                ),
                                security_context: Some(
                                    SecurityContext {
                                        allow_privilege_escalation: None,
                                        capabilities: None,
                                        privileged: None,
                                        proc_mount: None,
                                        read_only_root_filesystem: None,
                                        run_as_group: None,
                                        run_as_non_root: None,
                                        run_as_user: None,
                                        se_linux_options: None,
                                        seccomp_profile: None,
                                        windows_options: None,
                                    },
                                ),
                                startup_probe: None,
                                stdin: None,
                                stdin_once: None,
                                termination_message_path: Some(
                                    "/dev/termination-log",
                                ),
                                termination_message_policy: Some(
                                    "File",
                                ),
                                tty: None,
                                volume_devices: None,
                                volume_mounts: Some(
                                    [
                                        VolumeMount {
                                            mount_path: "/var/run/secrets/kubernetes.io/serviceaccount",
                                            mount_propagation: None,
                                            name: "kube-api-access-85vgl",
                                            read_only: Some(
                                                true,
                                            ),
                                            sub_path: None,
                                            sub_path_expr: None,
                                        },
                                    ],
                                ),
                                working_dir: None,
                            },
                        ],
                        dns_config: None,
                        dns_policy: Some(
                            "ClusterFirst",
                        ),
                        enable_service_links: Some(
                            true,
                        ),
                        ephemeral_containers: None,
                        host_aliases: None,
                        host_ipc: None,
                        host_network: None,
                        host_pid: None,
                        hostname: Some(
                            "coerce-sharded-chat-2",
                        ),
                        image_pull_secrets: None,
                        init_containers: None,
                        node_name: Some(
                            "docker-desktop",
                        ),
                        node_selector: None,
                        os: None,
                        overhead: None,
                        preemption_policy: Some(
                            "PreemptLowerPriority",
                        ),
                        priority: Some(
                            0,
                        ),
                        priority_class_name: None,
                        readiness_gates: None,
                        restart_policy: Some(
                            "Always",
                        ),
                        runtime_class_name: None,
                        scheduler_name: Some(
                            "default-scheduler",
                        ),
                        security_context: Some(
                            PodSecurityContext {
                                fs_group: None,
                                fs_group_change_policy: None,
                                run_as_group: None,
                                run_as_non_root: None,
                                run_as_user: None,
                                se_linux_options: None,
                                seccomp_profile: None,
                                supplemental_groups: None,
                                sysctls: None,
                                windows_options: None,
                            },
                        ),
                        service_account: Some(
                            "coerce-sharded-chat",
                        ),
                        service_account_name: Some(
                            "coerce-sharded-chat",
                        ),
                        set_hostname_as_fqdn: None,
                        share_process_namespace: None,
                        subdomain: Some(
                            "coerce-sharded-chat",
                        ),
                        termination_grace_period_seconds: Some(
                            30,
                        ),
                        tolerations: Some(
                            [
                                Toleration {
                                    effect: Some(
                                        "NoExecute",
                                    ),
                                    key: Some(
                                        "node.kubernetes.io/not-ready",
                                    ),
                                    operator: Some(
                                        "Exists",
                                    ),
                                    toleration_seconds: Some(
                                        300,
                                    ),
                                    value: None,
                                },
                                Toleration {
                                    effect: Some(
                                        "NoExecute",
                                    ),
                                    key: Some(
                                        "node.kubernetes.io/unreachable",
                                    ),
                                    operator: Some(
                                        "Exists",
                                    ),
                                    toleration_seconds: Some(
                                        300,
                                    ),
                                    value: None,
                                },
                            ],
                        ),
                        topology_spread_constraints: None,
                        volumes: Some(
                            [
                                Volume {
                                    aws_elastic_block_store: None,
                                    azure_disk: None,
                                    azure_file: None,
                                    cephfs: None,
                                    cinder: None,
                                    config_map: None,
                                    csi: None,
                                    downward_api: None,
                                    empty_dir: None,
                                    ephemeral: None,
                                    fc: None,
                                    flex_volume: None,
                                    flocker: None,
                                    gce_persistent_disk: None,
                                    git_repo: None,
                                    glusterfs: None,
                                    host_path: None,
                                    iscsi: None,
                                    name: "kube-api-access-85vgl",
                                    nfs: None,
                                    persistent_volume_claim: None,
                                    photon_persistent_disk: None,
                                    portworx_volume: None,
                                    projected: Some(
                                        ProjectedVolumeSource {
                                            default_mode: Some(
                                                420,
                                            ),
                                            sources: Some(
                                                [
                                                    VolumeProjection {
                                                        config_map: None,
                                                        downward_api: None,
                                                        secret: None,
                                                        service_account_token: Some(
                                                            ServiceAccountTokenProjection {
                                                                audience: None,
                                                                expiration_seconds: Some(
                                                                    3607,
                                                                ),
                                                                path: "token",
                                                            },
                                                        ),
                                                    },
                                                    VolumeProjection {
                                                        config_map: Some(
                                                            ConfigMapProjection {
                                                                items: Some(
                                                                    [
                                                                        KeyToPath {
                                                                            key: "ca.crt",
                                                                            mode: None,
                                                                            path: "ca.crt",
                                                                        },
                                                                    ],
                                                                ),
                                                                name: Some(
                                                                    "kube-root-ca.crt",
                                                                ),
                                                                optional: None,
                                                            },
                                                        ),
                                                        downward_api: None,
                                                        secret: None,
                                                        service_account_token: None,
                                                    },
                                                    VolumeProjection {
                                                        config_map: None,
                                                        downward_api: Some(
                                                            DownwardAPIProjection {
                                                                items: Some(
                                                                    [
                                                                        DownwardAPIVolumeFile {
                                                                            field_ref: Some(
                                                                                ObjectFieldSelector {
                                                                                    api_version: Some(
                                                                                        "v1",
                                                                                    ),
                                                                                    field_path: "metadata.namespace",
                                                                                },
                                                                            ),
                                                                            mode: None,
                                                                            path: "namespace",
                                                                            resource_field_ref: None,
                                                                        },
                                                                    ],
                                                                ),
                                                            },
                                                        ),
                                                        secret: None,
                                                        service_account_token: None,
                                                    },
                                                ],
                                            ),
                                        },
                                    ),
                                    quobyte: None,
                                    rbd: None,
                                    scale_io: None,
                                    secret: None,
                                    storageos: None,
                                    vsphere_volume: None,
                                },
                            ],
                        ),
                    },
                ),
                status: Some(
                    PodStatus {
                        conditions: Some(
                            [
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:06:52Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "Initialized",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:06:52Z,
                                        ),
                                    ),
                                    message: Some(
                                        "containers with unready status: [coerce-sharded-chat]",
                                    ),
                                    reason: Some(
                                        "ContainersNotReady",
                                    ),
                                    status: "False",
                                    type_: "Ready",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:06:52Z,
                                        ),
                                    ),
                                    message: Some(
                                        "containers with unready status: [coerce-sharded-chat]",
                                    ),
                                    reason: Some(
                                        "ContainersNotReady",
                                    ),
                                    status: "False",
                                    type_: "ContainersReady",
                                },
                                PodCondition {
                                    last_probe_time: None,
                                    last_transition_time: Some(
                                        Time(
                                            2022-08-27T16:06:52Z,
                                        ),
                                    ),
                                    message: None,
                                    reason: None,
                                    status: "True",
                                    type_: "PodScheduled",
                                },
                            ],
                        ),
                        container_statuses: Some(
                            [
                                ContainerStatus {
                                    container_id: None,
                                    image: "coerce-sharded-chat:latest",
                                    image_id: "",
                                    last_state: Some(
                                        ContainerState {
                                            running: None,
                                            terminated: None,
                                            waiting: None,
                                        },
                                    ),
                                    name: "coerce-sharded-chat",
                                    ready: false,
                                    restart_count: 0,
                                    started: Some(
                                        false,
                                    ),
                                    state: Some(
                                        ContainerState {
                                            running: None,
                                            terminated: None,
                                            waiting: Some(
                                                ContainerStateWaiting {
                                                    message: None,
                                                    reason: Some(
                                                        "ContainerCreating",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ],
                        ),
                        ephemeral_container_statuses: None,
                        host_ip: Some(
                            "192.168.65.4",
                        ),
                        init_container_statuses: None,
                        message: None,
                        nominated_node_name: None,
                        phase: Some(
                            "Pending",
                        ),
                        pod_ip: None,
                        pod_ips: None,
                        qos_class: Some(
                            "BestEffort",
                        ),
                        reason: None,
                        start_time: Some(
                            Time(
                                2022-08-27T16:06:52Z,
                            ),
                        ),
                    },
                ),
            },
        ],
    },
)
[2m2022-08-27T16:06:53.047451Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
[2m2022-08-27T16:06:53.047507Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
[2m2022-08-27T16:06:53.047522Z[0m [32m INFO[0m [1mcoerce::remote::stream::mediator[0m[2m:[0m actor_id=ShardCoordinator-ChatStream-Spawner-1 subscribing to topic coerce (key="")
[2m2022-08-27T16:06:53.047690Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
[2m2022-08-27T16:06:53.047769Z[0m [32m INFO[0m [1mcoerce::remote::api[0m[2m:[0m [node=1] http api listening on 0.0.0.0:31103
[2m2022-08-27T16:06:54.038800Z[0m [32m INFO[0m [1mcoerce::remote::heartbeat[0m[2m:[0m [node=1] leader of cluster: RemoteNodeState { id: 1, addr: "0.0.0.0:31101", tag: "chat-server-1", ping_latency: None, last_heartbeat: Some(2022-08-27T16:06:54.038793100Z), node_started_at: Some(2022-08-27T16:06:53.036301200Z), status: Healthy }, current_node_tag=chat-server-1
[2m2022-08-27T16:06:54.038980Z[0m [32m INFO[0m [1mcoerce::remote::cluster::sharding::coordinator[0m[2m:[0m shard coordinator started (shard_entity=ChatStream)
[2m2022-08-27T16:06:54.038997Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
[2m2022-08-27T16:06:54.039016Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
[2m2022-08-27T16:06:54.039019Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
[2m2022-08-27T16:06:54.039022Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
[2m2022-08-27T16:06:54.039025Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
[2m2022-08-27T16:06:54.039027Z[0m [32m INFO[0m [1mcoerce::remote::actor::handler[0m[2m:[0m registering actor locally 1
